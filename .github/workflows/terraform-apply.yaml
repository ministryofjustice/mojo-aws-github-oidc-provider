name: Terraform Apply

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "*"

permissions:
  id-token: write
  contents: read
  issues: write
  pull-requests: write

jobs:
  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    env:
      GITHUB_TOKEN: ${{ secrets.TECH_SERVICES_GITHUB_TOKEN }}
      GITHUB_OWNER: ministryofjustice

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set specified Terraform Version
      run: |
        tf_version=$(cat versions.tf 2> /dev/null | grep required_version | cut -d "\"" -f 2)
        echo "Terraform version specified is: $tf_version"
        echo "TFVERSION=${tf_version}" >> $GITHUB_ENV

    # Configure AWS credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: eu-west-2
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-session-name: GitHubWorkflow

    # Install the specified version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TFVERSION }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -reconfigure --backend-config="key=terraform.state"

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt --recursive -check

    # Validates Terraform configuration
    - name: Terraform Validate
      run: terraform validate

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan

    #   # On push to main, build or change infrastructure according to Terraform configuration files
    #   # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: terraform apply -auto-approve

    # Instructions
    # Note : It is recommended to lock Terraform version to https://github.com/ministryofjustice/mojo-aws-github-oidc-provider/blob/442480963302fb987646203be7464711377c0421/versions.tf
    # to enforce the use of a specific version across local and CI environments
    - name: Manual instructions
      run: |
        echo "Until permission on this repository are resolved Terraform Apply needs to be run locally."
        echo "Now run the main branch locally to apply changes \n make init \n make apply"

